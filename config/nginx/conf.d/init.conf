# Auto-SSL shared dictionaries
lua_shared_dict auto_ssl_settings 64k;
lua_shared_dict auto_ssl 1m;

# Initialize all modules
init_by_lua_block {
    -- Initialize request ID module
    local request_id = require "request_id"
    request_id.init()
    _G.request_id = request_id

    -- Initialize auto-ssl
    local auto_ssl_module = require "resty.auto-ssl"
    _G.auto_ssl = auto_ssl_module:new()

    -- Set debug logging based on environment variable (default: false)
    local debug_enabled = os.getenv("OPENRESTY_DEBUG") == "1"
    _G.auto_ssl:set("debug", debug_enabled)

    -- Define the storage path for auto-ssl files
    _G.auto_ssl:set("storage_adapter", "resty.auto-ssl.storage_adapters.file")
    _G.auto_ssl:set("dir", "/etc/resty-auto-ssl")

    -- Domain validation function
    -- Returns true if the domain is valid for SSL certificate issuance
    _G.auto_ssl:set("allow_domain", function(domain)
        ngx.log(ngx.DEBUG, "Checking domain: ", domain)
        
        -- Check for nil or empty domain
        if not domain or domain == "" then
            ngx.log(ngx.WARN, "Empty or nil domain")
            return false
        end
        
        -- Reject IP addresses
        if string.match(domain, "^%d+%.%d+%.%d+%.%d+$") then
            ngx.log(ngx.WARN, "Rejecting IP address: ", domain)
            return false
        end
        
        -- Log the allowed domain
        ngx.log(ngx.INFO, "Allowing domain: ", domain)
        return true
    end)

    -- Set the challenge server port for Let's Encrypt validation
    _G.auto_ssl:set("hook_server_port", 8999)

    -- Configure certificate renewal check interval (48 hours)
    _G.auto_ssl:set("renew_check_interval", 172800)

    -- Initialize auto-ssl
    _G.auto_ssl:init()
    
    -- Load required Lua modules
    require "cjson"
    require "resty.openssl"
}

# Initialize worker processes
init_worker_by_lua_block {
    _G.auto_ssl:init_worker()
} 